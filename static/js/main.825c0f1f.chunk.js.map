{"version":3,"sources":["actions/PageActions.js","reducers/page.js","actions/UserActions.js","reducers/user.js","reducers/index.js","store/configureStore.js","components/User.js","containers/UserContainer.js","components/Page.js","containers/PageContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["GET_PHOTOS_REQUEST","GET_PHOTOS_SUCCESS","GET_PHOTOS_FAIL","photosArr","cached","makeYearPhotos","photos","selectedYear","yearPhotos","forEach","item","Date","date","getFullYear","push","sort","a","b","likes","count","getPhotos","year","dispatch","type","payload","getMorePhotos","offset","VK","Api","call","extended","v","r","concat","response","items","e","error","Error","initialState","isFetching","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGIN_OUT","name","id","rootReducer","combineReducers","page","state","arguments","length","undefined","action","Object","objectSpread","message","user","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","User","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","renderTemplate","_this$props","props","react_default","createElement","className","onClick","handleLogout","handleLogin","inherits","createClass","key","value","React","Component","UserContainer","User_User","connect","Auth","login","session","username","first_name","logout","Page","onBtnClick","currentTarget","innerText","renderButtons","map","index","entry","src","sizes","url","alt","_this$props2","PageContainer","Page_Page","App","containers_PageContainer","containers_UserContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","es","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mNAAaA,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAE3BC,EAAY,GACZC,GAAS,EAEb,SAASC,EAAeC,EAAQC,GAC9B,IAAiBC,EAAa,GAS9B,OAPAF,EAAOG,QAAQ,SAAAC,GACC,IAAIC,KAAiB,IAAZD,EAAKE,MAAaC,gBACrBN,GAClBC,EAAWM,KAAKJ,KAGpBF,EAAWO,KAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAMC,MAAQH,EAAEE,MAAMC,QAC3CX,EAiCF,SAASY,EAAUC,GACxB,OAAO,SAAAC,GAML,GALAA,EAAS,CACPC,KAAMvB,EACNwB,QAASH,IAGPjB,EAAQ,CACV,IAAIE,EAASD,EAAeF,EAAWkB,GACvCC,EAAS,CACPC,KAAMtB,EACNuB,QAASlB,SAzCjB,SAASmB,EAAcC,EAAQP,EAAOE,EAAMC,GAE1CK,GAAGC,IAAIC,KACL,gBACA,CAAEC,SAAU,EAAGX,MAAOA,EAAOO,OAAQA,EAAQK,EAAG,QAChD,SAAAC,GACE,IAEE,GADA7B,EAAYA,EAAU8B,OAAOD,EAAEE,SAASC,OACpCT,GAAUM,EAAEE,SAASf,MAEvBM,EADAC,GAAU,IACYP,EAAOE,EAAMC,OAC9B,CACL,IAAIhB,EAASD,EAAeF,EAAWkB,GACvCjB,GAAS,EACTkB,EAAS,CACPC,KAAMtB,EACNuB,QAASlB,KAGb,MAAO8B,GACPd,EAAS,CACPC,KAAMrB,EACNmC,OAAO,EACPb,QAAS,IAAIc,MAAMF,QAqBvBX,CAAc,EAAG,IAAKJ,EAAMC,IC1DlC,IAAMiB,EAAe,CACnBlB,KAAM,KACNf,OAAQ,GACRkC,YAAY,EACZH,MAAO,ICVF,IAAMI,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAY,YCIzB,IAAML,EAAe,CACnBM,KAAM,GACNR,MAAO,GACPG,YAAY,EACZM,GAAI,ICPC,IAAMC,EAAcC,YAAgB,CACzCC,KHQK,WAAmD,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBZ,EAAce,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAQC,EAAO/B,MACb,KAAKvB,EACH,OAAOuD,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmB7B,KAAMiC,EAAO9B,QAASgB,YAAY,EAAMH,MAAO,KAEpE,KAAKpC,EACH,OAAOsD,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmB5C,OAAQgD,EAAO9B,QAASgB,YAAY,EAAOH,MAAO,KAEvE,KAAKnC,EACH,OAAOqD,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBb,MAAOiB,EAAO9B,QAAQiC,QAASjB,YAAY,IAEhE,QACE,OAAOU,IGnBXQ,KDQK,WAAmD,IAA9BR,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBZ,EAAce,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxD,OAAQC,EAAO/B,MACb,KAAKkB,EACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBV,YAAY,EAAMH,MAAO,KAE9C,KAAKK,EACH,OAAOa,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEV,YAAY,EACZK,KAAMS,EAAO9B,QAAQqB,KACrBR,MAAO,GACPS,GAAIQ,EAAO9B,QAAQsB,KAGvB,KAAKH,EACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBV,YAAY,EAAOH,MAAOiB,EAAO9B,QAAQiC,UAE9D,KAAKb,EACH,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBL,KAAM,GAAIC,GAAI,KAEnC,QACE,OAAOI,cE/BPS,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAQC,YACnBjB,EACAY,EAAiBM,YAAgBC,kDCLtBC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAiB,KAAAL,GAAA,QAAAM,EAAAtB,UAAAC,OAAAsB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAzB,UAAAyB,GAAA,OAAAN,EAAAf,OAAAsB,EAAA,EAAAtB,CAAAiB,MAAAH,EAAAd,OAAAuB,EAAA,EAAAvB,CAAAY,IAAAtC,KAAAkD,MAAAV,EAAA,CAAAG,MAAAvC,OAAAyC,MACEM,eAAiB,WAAM,IAAAC,EACeX,EAAKY,MAAjCrC,EADaoC,EACbpC,KAAMR,EADO4C,EACP5C,MAAOG,EADAyC,EACAzC,WAErB,OAAIH,EACK8C,EAAAnE,EAAAoE,cAAA,kSAGL5C,EACK2C,EAAAnE,EAAAoE,cAAA,gEAGLvC,EAEAsC,EAAAnE,EAAAoE,cAAA,kDACWvC,EADX,IAEEsC,EAAAnE,EAAAoE,cAAA,UAAQC,UAAU,MAAMC,QAAShB,EAAKY,MAAMK,cAA5C,mCAOFJ,EAAAnE,EAAAoE,cAAA,UAAQC,UAAU,MAAMC,QAAShB,EAAKY,MAAMM,aAA5C,mCAvBRlB,EAAA,OAAAf,OAAAkC,EAAA,EAAAlC,CAAAY,EAAAC,GAAAb,OAAAmC,EAAA,EAAAnC,CAAAY,EAAA,EAAAwB,IAAA,SAAAC,MAAA,WA8BI,OAAOT,EAAAnE,EAAAoE,cAAA,OAAKC,UAAU,WAAWb,KAAKQ,sBA9B1Cb,EAAA,CAA0B0B,IAAMC,WCE1BC,mLACK,IAAAd,EACqCT,KAAKU,MAAzCxB,EADDuB,EACCvB,KAAM8B,EADPP,EACOO,YAAaD,EADpBN,EACoBM,aAC3B,OACEJ,EAAAnE,EAAAoE,cAACY,EAAD,CACEnD,KAAMa,EAAKb,KACXR,MAAOqB,EAAKrB,MACZG,WAAYkB,EAAKlB,WACjBgD,YAAaA,EACbD,aAAcA,WATMM,IAAMC,WA4BnBG,cAbS,SAAAlC,GACtB,MAAO,CACLL,KAAMK,EAAML,OAIW,SAAApC,GACzB,MAAO,CACLkE,YAAa,kBAAMlE,ELtBd,SAASA,GACdA,EAAS,CACPC,KAAMkB,IAIRd,GAAGuE,KAAKC,MAAM,SAAAnE,GACZ,GAAIA,EAAEoE,QAAS,CACb,IAAIC,EAAWrE,EAAEoE,QAAQ1C,KAAK4C,WAC1BxD,EAAKd,EAAEoE,QAAQ1C,KAAKZ,GAExBxB,EAAS,CACPC,KAAMmB,EACNlB,QAAS,CAAEqB,KAAMwD,EAAUvD,aAG7BxB,EAAS,CACPC,KAAMoB,EACNN,OAAO,EACPb,QAAS,IAAIc,MAAM,8GAGtB,MKCHiD,aAAc,kBAAMjE,ELIf,SAASA,GAEdK,GAAGuE,KAAKK,OAAO,SAAAvE,GACbV,EAAS,CAAEC,KAAMqB,WKHRqD,CAGbF,GCjCWS,EAAb,SAAApC,GAAA,SAAAoC,IAAA,IAAAnC,EAAAC,EAAAf,OAAAgB,EAAA,EAAAhB,CAAAiB,KAAAgC,GAAA,QAAA/B,EAAAtB,UAAAC,OAAAsB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAzB,UAAAyB,GAAA,OAAAN,EAAAf,OAAAsB,EAAA,EAAAtB,CAAAiB,MAAAH,EAAAd,OAAAuB,EAAA,EAAAvB,CAAAiD,IAAA3E,KAAAkD,MAAAV,EAAA,CAAAG,MAAAvC,OAAAyC,MACE+B,WAAa,SAAArE,GACX,IAAMf,GAAQe,EAAEsE,cAAcC,UAC9BrC,EAAKY,MAAM9D,UAAUC,IAHzBiD,EAMEsC,cAAgB,WAGd,MAFc,CAAC,KAAM,KAAM,KAAM,KAAM,MAE1BC,IAAI,SAACnG,EAAMoG,GACtB,OACE3B,EAAAnE,EAAAoE,cAAA,UAAQO,IAAKmB,EAAOzB,UAAU,MAAMC,QAAShB,EAAKmC,YAC/C/F,MAZX4D,EAkBEU,eAAiB,WAAM,IAAAC,EACiBX,EAAKY,MAAnC5E,EADa2E,EACb3E,OAAQkC,EADKyC,EACLzC,WAEhB,OAHqByC,EACO5C,MAGlB8C,EAAAnE,EAAAoE,cAAA,KAAGC,UAAU,SAAb,qNAGN7C,EACM2C,EAAAnE,EAAAoE,cAAA,gEAED9E,EAAOuG,IAAI,SAACE,EAAOD,GAAR,OAChB3B,EAAAnE,EAAAoE,cAAA,OAAKO,IAAKoB,EAAMjE,GAAIuC,UAAU,SAC5BF,EAAAnE,EAAAoE,cAAA,SACED,EAAAnE,EAAAoE,cAAA,OAAK4B,IAAKD,EAAME,MAAM,GAAGC,IAAKC,IAAI,MAEpChC,EAAAnE,EAAAoE,cAAA,SAAI2B,EAAM7F,MAAMC,MAAhB,eAjCVmD,EAAA,OAAAf,OAAAkC,EAAA,EAAAlC,CAAAiD,EAAApC,GAAAb,OAAAmC,EAAA,EAAAnC,CAAAiD,EAAA,EAAAb,IAAA,SAAAC,MAAA,WAuCW,IAAAwB,EACkB5C,KAAKU,MAAtB7D,EADD+F,EACC/F,KAAMf,EADP8G,EACO9G,OACd,OACE6E,EAAAnE,EAAAoE,cAAA,OAAKC,UAAU,WACbF,EAAAnE,EAAAoE,cAAA,SAAIZ,KAAKoC,iBACTzB,EAAAnE,EAAAoE,cAAA,UACG/D,EADH,wBACef,EAAO8C,OADtB,KAGCoB,KAAKQ,sBA/CdwB,EAAA,CAA0BX,IAAMC,WCE1BuB,mLACK,IAAApC,EACqBT,KAAKU,MAAzBjC,EADDgC,EACChC,KAAM7B,EADP6D,EACO7D,UACd,OACE+D,EAAAnE,EAAAoE,cAACkC,EAAD,CACEhH,OAAQ2C,EAAK3C,OACbe,KAAM4B,EAAK5B,KACXmB,WAAYS,EAAKT,WACjBH,MAAOY,EAAKZ,MACZjB,UAAWA,WATSyE,IAAMC,WA2BnBG,cAZS,SAAAlC,GACtB,MAAO,CACLd,KAAMc,EAAMd,OAIW,SAAA3B,GACzB,MAAO,CACLF,UAAW,SAAAC,GAAI,OAAIC,EAASF,EAAUC,OAI3B4E,CAGboB,GCpBaE,mLATX,OACEpC,EAAAnE,EAAAoE,cAAA,OAAKC,UAAU,OACbF,EAAAnE,EAAAoE,cAACoC,EAAD,MACArC,EAAAnE,EAAAoE,cAACqC,EAAD,cALU3B,aCQZ4B,EAAcC,QACW,cAA7B/D,OAAOgE,SAASC,UAEe,UAA7BjE,OAAOgE,SAASC,UAEhBjE,OAAOgE,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtF,QACfgF,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAA3G,GACLuG,QAAQvG,MAAM,4CAA6CA,KCxFjE4G,IAASC,OACP/D,EAAAnE,EAAAoE,cAAC+D,EAAA,EAAD,CAAUpF,MAAOA,GACfoB,EAAAnE,EAAAoE,cAACgE,EAAD,OAEFC,SAASC,eAAe,SDUnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,kBAAwB5F,OAAOgE,SAAS6B,MACpDC,SAAW9F,OAAOgE,SAAS8B,OAIvC,OAGF9F,OAAO+F,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAA/F,OAAMuH,kBAAN,sBAEP9B,GAgEV,SAAiCM,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAnG,GAEJ,IAAM2H,EAAc3H,EAAS4H,QAAQC,IAAI,gBAEnB,MAApB7H,EAAS8H,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BzE,OAAOgE,SAASwC,aAKpBrC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAwB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCO,QAAQC,IACN,gHAMJd,EAAgBC,EAAOC,MChC/BE","file":"static/js/main.825c0f1f.chunk.js","sourcesContent":["export const GET_PHOTOS_REQUEST = 'GET_PHOTOS_REQUEST';\r\nexport const GET_PHOTOS_SUCCESS = 'GET_PHOTOS_SUCCESS';\r\nexport const GET_PHOTOS_FAIL = 'GET_PHOTOS_FAIL';\r\n\r\nlet photosArr = [];\r\nlet cached = false;\r\n\r\nfunction makeYearPhotos(photos, selectedYear) {\r\n  let createdYear, yearPhotos = [];\r\n\r\n  photos.forEach(item => {\r\n    createdYear = new Date(item.date * 1000).getFullYear();\r\n    if (createdYear === selectedYear) {\r\n      yearPhotos.push(item);\r\n    }\r\n  });\r\n  yearPhotos.sort((a, b) => b.likes.count - a.likes.count);\r\n  return yearPhotos;\r\n}\r\n\r\nfunction getMorePhotos(offset, count, year, dispatch) {\r\n  //eslint-disable-next-line no-undef\r\n  VK.Api.call(\r\n    'photos.getAll',\r\n    { extended: 1, count: count, offset: offset, v: '5.80' },\r\n    r => {\r\n      try {\r\n        photosArr = photosArr.concat(r.response.items);\r\n        if (offset <= r.response.count) {\r\n          offset += 200; // максимальное количество фото которое можно получить за 1 запрос\r\n          getMorePhotos(offset, count, year, dispatch);\r\n        } else {\r\n          let photos = makeYearPhotos(photosArr, year);\r\n          cached = true;\r\n          dispatch({\r\n            type: GET_PHOTOS_SUCCESS,\r\n            payload: photos,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: GET_PHOTOS_FAIL,\r\n          error: true,\r\n          payload: new Error(e),\r\n        });\r\n      }\r\n    }\r\n  );\r\n}\r\n\r\nexport function getPhotos(year) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PHOTOS_REQUEST,\r\n      payload: year,\r\n    });\r\n\r\n    if (cached) {\r\n      let photos = makeYearPhotos(photosArr, year);\r\n      dispatch({\r\n        type: GET_PHOTOS_SUCCESS,\r\n        payload: photos,\r\n      });\r\n    } else {\r\n      getMorePhotos(0, 200, year, dispatch);\r\n    }\r\n  }\r\n}","import {\r\n  GET_PHOTOS_REQUEST,\r\n  GET_PHOTOS_SUCCESS,\r\n  GET_PHOTOS_FAIL,\r\n} from '../actions/PageActions';\r\n\r\nconst initialState = {\r\n  year: 2018,\r\n  photos: [],\r\n  isFetching: false,\r\n  error: '',\r\n};\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PHOTOS_REQUEST:\r\n      return { ...state, year: action.payload, isFetching: true, error: '' };\r\n\r\n    case GET_PHOTOS_SUCCESS:\r\n      return { ...state, photos: action.payload, isFetching: false, error: '' };\r\n\r\n    case GET_PHOTOS_FAIL:\r\n      return { ...state, error: action.payload.message, isFetching: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGIN_OUT = 'LOGIN_OUT';\r\n\r\nexport function handleLogin() {\r\n  return function(dispatch) {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    });\r\n\r\n    //eslint-disable-next-line no-undef\r\n    VK.Auth.login(r => {\r\n      if (r.session) {\r\n        let username = r.session.user.first_name;\r\n        let id = r.session.user.id;\r\n\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: { name: username, id },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          error: true,\r\n          payload: new Error('Ошибка авторизации'),\r\n        });\r\n      }\r\n    }, 4); // запрос прав на доступ к photo\r\n  };\r\n}\r\n\r\nexport function handleLogout() {\r\n  return function(dispatch) {\r\n    // eslint-disable-next-line no-undef\r\n    VK.Auth.logout(r => {\r\n      dispatch({ type: LOGIN_OUT });\r\n    });\r\n  };\r\n}\r\n","import {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGIN_OUT,\r\n} from '../actions/UserActions';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  error: '', // добавили для сохранения текста ошибки\r\n  isFetching: false, // добавили для реакции на статус \"загружаю\" или нет\r\n  id: '',\r\n};\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return { ...state, isFetching: true, error: '' };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        name: action.payload.name,\r\n        error: '',\r\n        id: action.payload.id,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n      return { ...state, isFetching: false, error: action.payload.message };\r\n\r\n    case LOGIN_OUT:\r\n      return { ...state, name: '', id: '' };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { pageReducer } from './page';\r\nimport { userReducer } from './user';\r\n\r\nexport const rootReducer = combineReducers({\r\n  page: pageReducer,\r\n  user: userReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { rootReducer } from '../reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class User extends React.Component {\r\n  renderTemplate = () => {\r\n    const { name, error, isFetching } = this.props;\r\n\r\n    if (error) {\r\n      return <p>Во время запроса произошла ошибка, обновите страницу</p>;\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Загружаю...</p>;\r\n    }\r\n\r\n    if (name) {\r\n      return (\r\n        <p>\r\n          Привет, {name}!\r\n          <button className='btn' onClick={this.props.handleLogout}>\r\n            Выйти\r\n          </button>\r\n        </p>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className='btn' onClick={this.props.handleLogin}>\r\n          Войти\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return <div className='ib user'>{this.renderTemplate()}</div>;\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  handleLogin: PropTypes.func.isRequired,\r\n  handleLogout: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { User } from \"../components/User\";\r\nimport { handleLogin, handleLogout } from \"../actions/UserActions\";\r\n\r\nclass UserContainer extends React.Component {\r\n  render() {\r\n    const { user, handleLogin, handleLogout } = this.props;\r\n    return (\r\n      <User\r\n        name={user.name}\r\n        error={user.error}\r\n        isFetching={user.isFetching}\r\n        handleLogin={handleLogin}\r\n        handleLogout={handleLogout}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.user\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleLogin: () => dispatch(handleLogin()),\r\n    handleLogout: () => dispatch(handleLogout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Page extends React.Component {\r\n  onBtnClick = e => {\r\n    const year = +e.currentTarget.innerText;\r\n    this.props.getPhotos(year);\r\n  };\r\n\r\n  renderButtons = () => {\r\n    const years = [2018, 2017, 2016, 2015, 2014];\r\n\r\n    return years.map((item, index) => {\r\n      return (\r\n        <button key={index} className=\"btn\" onClick={this.onBtnClick}>\r\n          {item}\r\n        </button>\r\n      );\r\n    })\r\n  };\r\n\r\n  renderTemplate = () => {\r\n    const { photos, isFetching, error } = this.props;\r\n\r\n    if (error) {\r\n      return (<p className=\"error\">Во время загрузки фото произошла ошибка</p>);\r\n    }\r\n\r\n    if (isFetching) {\r\n      return (<p>Загрузка...</p>);\r\n    } else {\r\n      return photos.map((entry, index) => (\r\n        <div key={entry.id} className=\"photo\">\r\n          <p>\r\n            <img src={entry.sizes[0].url} alt=\"\" />\r\n          </p>\r\n          <p>{entry.likes.count} ❤</p>\r\n        </div>\r\n      ));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { year, photos } = this.props;\r\n    return (\r\n      <div className=\"ib page\">\r\n        <p>{this.renderButtons()}</p>\r\n        <h3>\r\n          {year} год [{photos.length}]\r\n        </h3>\r\n        {this.renderTemplate()}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nPage.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  photos: PropTypes.array.isRequired,\r\n  getPhotos: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Page } from '../components/Page';\r\nimport { getPhotos } from '../actions/PageActions';\r\n\r\nclass PageContainer extends React.Component {\r\n  render() {\r\n    const { page, getPhotos } = this.props;\r\n    return (\r\n      <Page\r\n        photos={page.photos}\r\n        year={page.year}\r\n        isFetching={page.isFetching}\r\n        error={page.error}\r\n        getPhotos={getPhotos}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    page: store.page,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPhotos: year => dispatch(getPhotos(year)),\r\n  }\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PageContainer);","import React, { Component } from 'react';\nimport UserContainer from '../containers/UserContainer';\nimport PageContainer from '../containers/PageContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <PageContainer />\n        <UserContainer />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}